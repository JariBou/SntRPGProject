Player:
-Name
-Health
-Attack
-Armor     //For now armor is a flat reduction; maybe a percentage later on
-Weapon
-Armour
-Gold
-Levels


Enemies:   hp and attack increases with time
-Name
-Health
-Attack
-Armor
-GoldGivenUponDeath


Armours:
>SpecialEffects:
    - "block"  increased block value    // Not yet implemented
    - "dmgDim" flat damage reduction
    - "atkBonus" flat bonus damage
    - bonus atk according to player missing health?
    - bonus atk according to player current health?

Weapons:
>SpecialEffects:
    - "percent"  percentage increased atk damage
    - "burn"     burning overTurn damage    damage=burnLvl
    - vampiric   {applied over totalDamage}
    - damage according to missing enemy health
    - lSteal



To make levels idea:
have a  main file in which you import the level classes with a constructor with the player as input
so that it keeps the same player.

main file
-> level1(Player player)    // maybe have levelx return a true or false to know when to stop or not a loop (assert)
-> level2(Player player)    // or invoque an end screen when dead that offers to restart and lauches the main again
->....

